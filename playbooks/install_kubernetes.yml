---
- name: Install k3s (Lightweight Kubernetes)
  hosts: all
  become: true
  vars_files:
    - ../group_vars/all.yml

  vars:
    k3s_version: "v1.29.1+k3s1"  # Stable version for consistency
    k3s_token: "ansible-lab-cluster"
    k3s_server_url: ""  # Set this in inventory for multi-node clusters

  tasks:
    - name: Install required packages for k3s
      apt:
        name:
          - curl
          - iptables
          - open-iscsi
          - nfs-common
        state: present
        update_cache: true

    - name: Check if k3s is already installed
      stat:
        path: /usr/local/bin/k3s
      register: k3s_binary

    - name: Download and install k3s server (single node)
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token }} sh -s - server --cluster-init
      when: 
        - not k3s_binary.stat.exists
        - inventory_hostname == groups['all'][0]  # First node becomes server
      environment:
        INSTALL_K3S_EXEC: "--disable=traefik --disable=servicelb --write-kubeconfig-mode=644"

    - name: Download and install k3s server (additional servers)
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token }} sh -s - server --server https://{{ hostvars[groups['all'][0]]['ansible_default_ipv4']['address'] }}:6443
      when: 
        - not k3s_binary.stat.exists
        - inventory_hostname != groups['all'][0]
        - inventory_hostname in groups.get('servers', [])
      environment:
        INSTALL_K3S_EXEC: "--disable=traefik --disable=servicelb --write-kubeconfig-mode=644"

    - name: Download and install k3s agent (worker nodes)
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token }} K3S_URL=https://{{ hostvars[groups['servers'][0]]['ansible_host'] | default(groups['servers'][0]) }}:6443 sh -
      when: 
        - not k3s_binary.stat.exists
        - inventory_hostname in groups.get('agents', [])

    - name: Wait for k3s to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 15
        timeout: 300
      when: inventory_hostname in groups.get('servers', groups['all'])

    - name: Create kubectl config directory
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy k3s config to user's kubeconfig
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        remote_src: true
      when: inventory_hostname in groups.get('servers', groups['all'])

    - name: Replace localhost with actual IP in kubeconfig
      replace:
        path: "/home/{{ ansible_user }}/.kube/config"
        regexp: '127\.0\.0\.1'
        replace: "{{ ansible_default_ipv4.address }}"
      when: inventory_hostname in groups.get('servers', groups['all'])

    - name: Add kubectl completion to bashrc
      lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: "{{ item }}"
        create: true
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - 'export KUBECONFIG=~/.kube/config'
        - 'source <(kubectl completion bash)'
        - 'alias k=kubectl'
        - 'complete -F __start_kubectl k'

    - name: Verify k3s installation
      shell: k3s kubectl get nodes
      register: k3s_nodes
      changed_when: false
      when: inventory_hostname in groups.get('servers', groups['all'])

    - name: Display k3s cluster status
      debug:
        msg:
          - "k3s installation completed"
          - "Cluster nodes: {{ k3s_nodes.stdout_lines | default(['Status check skipped on agent nodes']) }}"
          - "Note: Traefik and ServiceLB are disabled for custom ingress/load balancer setup"
          - "Log out and back in for bash completion to take effect"